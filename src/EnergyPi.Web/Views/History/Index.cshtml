@{
    ViewData["Title"] = "History";
}

@model EnergyPi.Web.Models.HistoryViewModel

@section Scripts {
    <script>
        // focused hour's power
        (function () {
            var ctx = document.getElementById("focused-hour-power-chart").getContext("2d");
            var focusedHourChart = new Chart(ctx, {
                type: "line",
                data: {
                    labels: [ @Html.Raw(String.Join(", ", Model.FocusedHourConsumption.Keys.Select(k => $"\"{k}\""))) ],
                    datasets: [
                        {
                            label: "Energy Consumption (kWh)",
                            yAxisID: "kwh-y-axis",
                            data: [ @String.Join(",", Model.FocusedHourConsumption.Values) ],
                            lineTension: 0,
                            fill: true
                        }, {
                            label: "Power Draw (kW)",
                            yAxisID: "kw-y-axis",
                            data: [@String.Join(",", Model.FocusedHourPowerDraw.Values)],
                            lineTension: 0,
                            fill: false,
                            backgroundColor: "#FF0000",
                            borderColor: "#FF0000"
                        }
                    ]
                },
                options: {
                    scales: {
                        xAxes: [{
                            type: "time",
                            distribution: "linear"
                        }],
                        yAxes: [
                            {
                                id: "kwh-y-axis",
                                position: "left",
                                ticks: {
                                    min: 0
                                }
                            }, {
                                id: "kw-y-axis",
                                position: "right",
                                ticks: {
                                    min: 0
                                }
                            }
                        ]
                    }
                }
            });
        })();

        // focused day's hourly consumption
        (function () {
            var hourlyDataPoints = [ @Html.Raw(String.Join(",", Model.FocusedDaysHourlyConsumption.Keys.Select(k => $"\"{k.ToString("hh:mm tt")}\""))) ];
            var hourlyDateTimeDataPoints = [ @Html.Raw(String.Join(",", Model.FocusedDaysHourlyConsumption.Keys.Select(k => $"\"{k.ToString()}\""))) ];
            var energyConsumptionDataPoints = [ @String.Join(",", Model.FocusedDaysHourlyConsumption.Values) ];
            var temperatureDataPoints = [ @Html.Raw(String.Join(",", Model.FocusedDaysTemperature.Values)) ];

            var ctx = document.getElementById("focused-days-hourly-consumption-chart").getContext("2d");
            var daysHourlyChart = new Chart(ctx, {
                type: "bar",
                data: {
                    labels: hourlyDataPoints,
                    datasets: [
                        {
                            label: "Energy Consumption (kWh)",
                            yAxisID: "energy-y-axis",
                            data: energyConsumptionDataPoints
                        }, {
                            label: "Weather (°F)",
                            yAxisID: "weather-y-axis",
                            type: "line",
                            fill: false,
                            backgroundColor: "#FF0000",
                            borderColor: "#FF0000",
                            data: temperatureDataPoints,
                            lineTension: 0
                        }
                    ]
                },
                options: {
                    onClick: function (c, i) {
                        var index = i[0]._index;
                        window.location.href = "/History/Index?date=" + hourlyDateTimeDataPoints[index];
                    },
                    scales: {
                        yAxes: [
                            {
                                id: "energy-y-axis",
                                position: "left",
                                ticks: {
                                    min: 0
                                }
                            },
                            {
                                id: "weather-y-axis",
                                position: "right"
                            }
                        ]
                    }
                }
            });
        })();

        // focused month's consumption
        (function () {
            var dailyDataPoints = [ @Html.Raw(String.Join(",", Model.FocusMonthsDailyConsumption.Keys.Select(k => $"\"{k.ToString("MMMM d")}\""))) ];
            var dateTimeDataPoints = [ @Html.Raw(String.Join(",", Model.FocusMonthsDailyConsumption.Keys.Select(k => $"\"{k}\""))) ];
            var energyConsumptionDataPoints = [ @String.Join(",", Model.FocusMonthsDailyConsumption.Values) ];
            var highTemperatureDataPoints = [ @String.Join(",", Model.FocusedMonthsHighestTemperature.Values) ];
            var averageTemperatureDataPoints = [ @String.Join(",", Model.FocusedMonthsAverageTemperature.Values) ];
            var lowTemperatureDataPoints = [ @String.Join(",", Model.FocusedMonthsLowestTemperature.Values) ];

            var ctx = document.getElementById("focused-months-consumption-chart").getContext("2d");
            var monthsDailyChart = new Chart(ctx, {
                type: "bar",
                data: {
                    labels: dailyDataPoints,
                    datasets: [
                        {
                            label: "Energy Consumption (kWh)",
                            yAxisID: "energy-y-axis",
                            data: energyConsumptionDataPoints
                        }, {
                            type: "line",
                            fill: false,
                            backgroundColor: "#FF0000",
                            borderColor: "#FF0000",
                            label: "High Temperature (°F)",
                            yAxisID: "weather-y-axis",
                            data: highTemperatureDataPoints,
                            lineTension: 0
                        }, {
                            type: "line",
                            fill: false,
                            backgroundColor: "#E5E500",
                            borderColor: "#E5E500",
                            label: "Average Temperature (°F)",
                            yAxisID: "weather-y-axis",
                            data: averageTemperatureDataPoints,
                            lineTension: 0
                        }, {
                            type: "line",
                            fill: false,
                            backgroundColor: "#0000FF",
                            borderColor: "#0000FF",
                            label: "Low Temperature (°F)",
                            yAxisID: "weather-y-axis",
                            data: lowTemperatureDataPoints,
                            lineTension: 0
                        }
                    ]
                },
                options: {
                    onClick: function (c, i) {
                        var index = i[0]._index;
                        window.location.href = "/History/Index?date=" + dateTimeDataPoints[index];
                    },
                    scales: {
                        yAxes: [
                            {
                                id: "energy-y-axis",
                                position: "left",
                                ticks: {
                                    min: 0
                                }
                            }, {
                                id: "weather-y-axis",
                                position: "right"
                            }
                        ]
                    }
                }
            });
        })();

        // pre-set the datetime input box w/ the date parameter from the URL
        document.getElementById("date-time-input").value = (new URLSearchParams(window.location.search)).get("date");
        // on button click, navigate to the new datetime
        document.getElementById("load-date-btn").onclick = function () {
            var dateTime = document.getElementById("date-time-input").value
            window.location.href = "/History/Index?date=" + dateTime;
        }
    </script>
}

<h1>
    @ViewData["Title"] - @Model?.FocusedDate.ToString("MMMM d, yyyy")
</h1>

<div class="panel">
    <label>Date to view:</label>
    <input type="datetime" id="date-time-input" class="form-control" />
    <button id="load-date-btn" class="btn btn-primary">Show Date</button>
</div>

<br />
<div id="quick-stats-table">
    <h6>Energy</h6>
    <table class="table table-hover table-bordered table-sm">
        <tr>
            <th scope="row">
                Day's Consumption
            </th>
            <td>
                @Model?.FocusedDaysTotalConsumption.ToString("N2") kWh
            </td>
        </tr>
        <tr>
            <th scope="row">
                @Model?.FocusedDate.ToString("MMMM yyyy")'s Consumption
            </th>
            <td>
                @Model?.FocusedMonthsTotalConsumption.ToString("N2") kWh
            </td>
        </tr>
    </table>

    <h6>Weather</h6>
    <table class="table table-hover table-bordered table-sm">
        <tr>
            <th scope="col">

            </th>
            <th scope="col">
                Highest
            </th>
            <th scope="col">
                Average
            </th>
            <th scope="col">
                Lowest
            </th>
        </tr>
        <tr>
            <th scope="row">
                Temperature
            </th>
            <td>
                @Model?.FocusedDaysHighestTemperature °F
            </td>
            <td>
                @Model?.FocusedDaysAverageTemperature.ToString("N2") °F
            </td>
            <td>
                @Model?.FocusedDaysLowestTemperature °F
            </td>
        </tr>
        <tr>
            <th scope="row">
                Humidity
            </th>
            <td>
                @Model?.FocusedDaysHighestHumidity.ToString("P0")
            </td>
            <td>
                @Model?.FocusedDaysAverageHumidity.ToString("P0")
            </td>
            <td>
                @Model?.FocusedDaysLowestHumidity.ToString("P0")
            </td>
        </tr>
    </table>
</div>

<div id="focused-hour-power">
    <br />
    <h3>Power Consumption &amp; Power Draw at @Model?.FocusedDate.ToString("h:mm tt")</h3>
    <h6>Temperature: @Model?.FocusedHoursTemperature °F, Humidity: @Model?.FocusedHoursHumidity.ToString("P0")</h6>
    <h6>Consumption: @Model?.FocusedHourConsumption.Values.Sum() kWh</h6>
    <canvas id="focused-hour-power-chart" height="100"></canvas>
</div>

<div id="focused-days-hourly-consumption">
    <br />
    <h3>Hourly Consumption on @Model?.FocusedDate.ToString("MMMM dd, yyyy")</h3>
    <canvas id="focused-days-hourly-consumption-chart" height="100"></canvas>
</div>

<div id="focused-months-consumption">
    <br />
    <h3>Consumption for @Model?.FocusedDate.ToString("MMMM yyyy")</h3>
    <canvas id="focused-months-consumption-chart" height="100"></canvas>
</div>
